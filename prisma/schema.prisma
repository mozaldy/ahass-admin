// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

model SparePart {
  id                 Int       @id @default(autoincrement())

  kodeSparepart      String @unique
  aktif              Boolean
  namaSparepart      String
  namaLokalSparepart String?
  grupSparepart      String
  hargaLokal         Int
  hargaNasional      Int?
  uom                String
  grupKodeAHM        String?
}

model Jasa {
  kode              String @id
  nama              String
  jobType           String
  jobTypeDesc       String
  kategoriPekerjaan String
  hargaJual         Int
  waktuKerja        Int
  satuanKerja       String
  catatan           String?
  statusAktif       Boolean
}


model Karyawan {
  id                  Int      @id @default(autoincrement())
  name                String
  alamat              String
  provinsi            String
  kabupaten           String
  kecamatan           String
  kelurahan           String
  kodepos             String
  notelp              String?
  nohp                String
  email               String?
  catatan             String?
  noktp               String
  tempat_lahir        String
  tanggal_lahir       DateTime?
  gender              String
  agama               String
  berlaku_hingga      DateTime?
  status_kawin        String?
  status_kebangsaan   String?
  status_karyawan_tetap String?
  honda_id            String?
  tanggal_masuk       DateTime?
  tanggal_berhenti    DateTime?
  jabatan             String?
  level_training      String?
  status_pit          String?
  komisi_penjualan    String?
  gaji_pokok          Float?
  tunjangan_jabatan   Float?
  kesehatan           Float?
  transport           Float?
  uang_harian         Float?
}

model Pkb {
  pkbID         Int      @id @default(autoincrement())
  soID          Int
  status        String
  soNo          String
  noPKB         String
  noPolisi      String
  totalFaktur   Float
  tipePembayran String
  tanggal       DateTime
}

model TipeKendaraanAHM {
  idTipeKendaraanAHM Int              @id
  kodeTipeKendaraanAHM String?
  TipeKendaraans     TipeKendaraan[]
}

model TipeKendaraan {
  id                  Int @id
  idTipeKendaraanAHM  Int
  tipe                String
  namaTipe            String
  cc                  Int
  model               String
  commercialName      String?
  aktif               Boolean
  TipeKendaraanAHM    TipeKendaraanAHM @relation(fields: [idTipeKendaraanAHM], references: [idTipeKendaraanAHM])
}


model Customer {
  id                  Int      @id @default(autoincrement())
  kode                String   @unique
  status              Boolean
  title               String
  nama                String
  noktp               String
  pekerjaan           String?
  agama               String?
  tanggal_lahir       DateTime?
  nopassport          String?

  alamat              String
  provinsi            String
  kabupaten           String
  kecamatan           String
  kelurahan           String
  kodepos             String?
  notelp              String
  nohp                String
  
  email               String?
  catatan             String?

  nohpKontakPerson    String?
  notelpKontakPerson  String?
  namaKontakPerson    String?

  alamatKirim         String?
  up                  String?
  notelpAlamatKirim   String?

  kendaraanAsCustomer Kendaraan[] @relation("CustomerAsCustomer")
  kendaraanAsPemilik  Kendaraan[] @relation("CustomerAsPemilik")
}

model Kendaraan {
    no_polisi           String @id
    customer Customer @relation(name: "CustomerAsCustomer", fields: [kode_customer], references: [kode])
    pemilik Customer @relation(name: "CustomerAsPemilik", fields: [kode_pemilik], references: [kode])
    statusAktif         Boolean
    kode_customer String
    kode_pemilik String
    namaTipeKendaraan String
    warna            String
    tahun_rakit String
    no_rangka   String
    no_mesin            String

  }
